<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="projectmofit.mofit.domain.group.dao.GroupDao">

    <insert id="insertGroup" parameterType="Group">
        INSERT INTO `group` (group_name, type, info, img)
        VALUES (#{groupName}, #{type}, #{info}, #{byteImg})
    </insert>

    <insert id="insertRegion" parameterType="string">
        INSERT INTO group_region
        VALUES ((SELECT group_id FROM `group` WHERE group_name = #{groupName}),
                #{region})
    </insert>

    <select id="groupNameCheck" parameterType="string">
        SELECT COUNT(*)
        FROM `group`
        WHERE group_name = #{groupName}
    </select>

    <select id="findGroupById" resultType="Group">
        SELECT G.group_id AS groupId, group_name AS groupName, type, info, img as byteImg, M.user_id AS leaderId
        FROM `group` G
        INNER JOIN `group_member` M
        ON G.group_id = M.group_id
        WHERE G.group_id = #{groupId} AND M.grade = '운영진'
    </select>

    <select id="findGroupByGroupName" parameterType="string" resultType="Group">
        SELECT group_id AS groupId, group_name AS groupName, type, info
        FROM `group`
        WHERE group_name = #{groupName}
    </select>

    <select id="findGroupByRegion" parameterType="string" resultType="Group">
        SELECT DISTINCT G.group_id AS groupId, group_name AS groupName, type, info, img AS byteImg
        FROM `group` G
        INNER JOIN group_region R
        ON G.group_id = R.group_id
        WHERE R.region = #{region}
    </select>

    <select id="findRegions" parameterType="int" resultType="string">
        SELECT region
        FROM group_region
        WHERE group_id = #{groupId}
    </select>

    <insert id="insertGroupLeader" parameterType="int">
        INSERT INTO group_member
        VALUES (#{userId}, #{groupId}, '운영진')
    </insert>

    <insert id="joinGroup" parameterType="int">
        INSERT INTO group_member
        VALUES (#{userId}, #{groupId}, '일반회원')
    </insert>

    <select id="findGroupDetail" resultType="GroupHomeDto">
        SELECT COUNT(DISTINCT M.user_id) AS `member`,
            COUNT(DISTINCT B.index) AS `board`,
            (SELECT user_id FROM `group_member`
                WHERE group_id = #{groupId} AND grade = '운영진')
                AS leaderId,
            (SELECT nickname FROM user
                WHERE id = (SELECT user_id FROM `group_member`
                WHERE group_id = #{groupId} AND grade = '운영진')
            ) AS leaderNickname
        FROM `group_member` M
        RIGHT OUTER JOIN `group` G
            ON G.group_id = M.group_id
        LEFT OUTER JOIN `board` B
            ON G.group_id = B.group_id
        WHERE M.group_id = #{groupId}
    </select>

    <select id="findGroupMember" resultType="GroupMember">
        SELECT G.group_id AS groupId, G.user_id AS userId, U.nickname, G.grade
        FROM group_member G
        INNER JOIN user U
        ON G.user_id = U.id
        WHERE G.group_id = #{groupId};
    </select>

    <delete id="deleteMember">
        DELETE FROM `group_member`
        WHERE group_id = #{groupId} AND user_id = #{userId}
    </delete>

</mapper>

